---

# The docker compose source file.
docker_compose_file: docker-compose.yaml

# A list of additional files and directories to establish on the remote server.
# - Include `src` to copy a file or directory
# - Include `content` to create a file with the specified content
# - Include `template` to create a file from the specified template
# - Exclude `src`, `content`, and `template` to create a directory
docker_compose_files:
    # The local path to a file or directory.
# - src:

    # The contents of the file.
#   content:

    # The local path of a Jinja2 formatted template.
#   template:

    # The remote relative path to the project directory.
#   dest:

    # The name of the user to own the file or directory.
#   owner: '{{ docker_compose_owner }}'

    # The name of the group to own the file or directory.
#   group: '{{ docker_compose_group }}'

    # The permissions of the destination file or directory.
#   mode: 'preserve'

# The name of the group to own the project files and directories.
docker_compose_group: '{{ ansible_user }}'

# A list of docker networks to be additionally created.
docker_compose_networks:

# The name of the user to own the project files and directories.
docker_compose_owner: '{{ ansible_user }}'

# The remote path of the docker compose project.
docker_compose_path:

# The policy on pulling container image(s) before running.
# Options: 'always', 'missing', 'never', 'policy'
docker_compose_pull: policy

# The policy on recreating containers.
# Options: 'always', 'never', 'auto'
docker_compose_recreate: auto

# Prune the builder cache after changes are detected.
docker_prune_builder_cache: false

# A dictionary of filter values used for selecting images to delete.
docker_prune_builder_cache_filters:

# Prune containers after changes are detected.
docker_prune_containers: false

# A dictionary of filter values used for selecting containers to delete.
docker_prune_containers_filters:

# Prune images after changes are detected.
docker_prune_images: false

# A dictionary of filter values used for selecting images to delete.
docker_prune_images_filters:

# Prune networks after changes are detected.
docker_prune_networks: false

# A dictionary of filter values used for selecting networks to delete.
docker_prune_networks_filters:

# Prune volumes after changes are detected.
docker_prune_volumes: false

# A dictionary of filter values used for selecting volumes to delete.
docker_prune_volumes_filters:
