---

- name: Create project directory
  ansible.builtin.file:
    name: '{{ docker_compose_path }}'
    state: directory
    owner: '{{ docker_compose_owner }}'
    group: '{{ docker_compose_group }}'
    mode: 0755
  notify: docker compose up
  tags: docker_compose

- name: Create docker compose file
  ansible.builtin.copy:
    src: '{{ docker_compose_file }}'
    dest: '{{ docker_compose_path }}/docker-compose.yaml'
    owner: '{{ docker_compose_owner }}'
    group: '{{ docker_compose_group }}'
    mode: 0644
  notify: docker compose up
  tags: docker_compose

- name: Create directory
  ansible.builtin.file:
    name: '{{ docker_compose_path }}/{{ item.dest }}'
    state: directory
    owner: '{{ item.owner | default(docker_compose_owner, true) }}'
    group: '{{ item.group | default(docker_compose_group, true) }}'
    mode: "{{ item.mode | default('0755', true) }}"
  when: item.src is not defined and item.content is not defined and item.template is not defined
  loop: '{{ docker_compose_files | default([], true) }}'
  loop_control:
    label: "{{ item | ansible.utils.remove_keys(target=['content']) }}"
  notify: docker compose up
  tags: docker_compose

- name: Copy file or directory
  ansible.builtin.copy:
    src: '{{ item.src }}'
    dest: '{{ docker_compose_path }}/{{ item.dest }}'
    owner: '{{ item.owner | default(docker_compose_owner, true) }}'
    group: '{{ item.group | default(docker_compose_group, true) }}'
    mode: "{{ item.mode | default('preserve', true) }}"
  when: item.src is defined
  loop: '{{ docker_compose_files | default([], true) }}'
  loop_control:
    label: "{{ item | ansible.utils.remove_keys(target=['content']) }}"
  notify: docker compose up
  tags: docker_compose

- name: Create file from content
  ansible.builtin.copy:
    content: '{{ item.content }}'
    dest: '{{ docker_compose_path }}/{{ item.dest }}'
    owner: '{{ item.owner | default(docker_compose_owner, true) }}'
    group: '{{ item.group | default(docker_compose_group, true) }}'
    mode: "{{ item.mode | default('0400', true) }}"
  when: item.content is defined
  loop: '{{ docker_compose_files | default([], true) }}'
  loop_control:
    label: "{{ item | ansible.utils.remove_keys(target=['content']) }}"
  notify: docker compose up
  tags: docker_compose

- name: Create file from template
  ansible.builtin.template:
    src: '{{ item.template }}'
    dest: '{{ docker_compose_path }}/{{ item.dest }}'
    owner: '{{ item.owner | default(docker_compose_owner, true) }}'
    group: '{{ item.group | default(docker_compose_group, true) }}'
    mode: "{{ item.mode | default('0400', true) }}"
  when: item.template is defined
  loop: '{{ docker_compose_files | default([], true) }}'
  loop_control:
    label: "{{ item | ansible.utils.remove_keys(target=['content']) }}"
  notify: docker compose up
  tags: docker_compose

- name: Create docker network
  community.docker.docker_network:
    name: '{{ item }}'
    state: present
  loop: '{{ docker_compose_networks | default([], true) }}'
  tags: docker_compose

- name: Trigger `docker compose up --force-recreate`
  command: /bin/true
  when: "'docker_compose_up' in ansible_run_tags"
  notify: docker compose up
  tags: docker_compose_up
